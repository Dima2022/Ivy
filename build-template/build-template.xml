<?xml version="1.0" encoding="UTF-8"?>

<project xmlns:ivy="antlib:org.apache.ivy.ant" name="ant_ivy" default="all" basedir=".">

    <path id="classpath.test">
        <pathelement location="${lib}/junit-4.12.jar"/>
        <pathelement location="${lib}/hamcrest-core-1.3.jar"/>
        <pathelement location="${main.build.dir.classes}"/>
		<!-- [Dima G] Added so the ant_ivy.jar will be picked up the UA as well -->
		<pathelement location="${main.build.dir}/ant_ivy.jar"/>
    </path>
	
    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}" />
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="https://repo.maven.apache.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
    </target>

    <target name="init-ivy" depends="download-ivy">
        <!-- try to load ivy here from ivy home, in case the user has not already dropped
                  it into ant's lib dir (note that the latter copy will always take precedence).
                  We will not fail as long as local lib dir exists (it may be empty) and
                  ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar" />
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
    </target>

    <target name="resolve-test" depends="init-ivy">
        <!--<ivy:retrieve />-->

        <!-- see conf "test" in ivy.xml -->
        <ivy:retrieve conf="test"
                      type="jar,bundle"
                      sync="true"
                      pattern="${lib}/[module]-[revision].[ext]"/>
    </target>

    <target name="compile">
        <mkdir dir="${main.build.dir.classes}"/>
        <javac srcdir="${main.src.dir}" destdir="${main.build.dir.classes}" includeantruntime="false"/>
    </target>

    <target name="test-compile" depends="compile,resolve-test">
        <mkdir dir="${test.build.dir.classes}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.build.dir.classes}" includeantruntime="false">
            <classpath refid="classpath.test"/>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <junit printsummary="on" haltonfailure="yes" fork="true">
            <classpath>
                <path refid="classpath.test"/>
                <pathelement location="${test.build.dir.classes}"/>
            </classpath>
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${test.src.dir}" includes="**/*Test.java" />
            </batchtest>
        </junit>
    </target>

    <target name="package" depends="test">
        <jar destfile="${main.build.dir}/${ant.project.name}.jar" basedir="${main.build.dir.classes}">
            <manifest>
                <attribute name="Main-Class" value="${main.class}" />
            </manifest>
        </jar>
    </target>

    <target name="all" depends="package">
    </target>

    <target name="run" depends="package">
        <java jar="${main.build.dir}/${ant.project.name}.jar" fork="true"/>
    </target>

    <target name="clean">
        <delete dir="${build}"/>
    </target>
</project>